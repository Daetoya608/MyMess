Запрос websocket (header) от клиента к серверу:

{
    "token": str,
}

-------------------------------------------------------------

содержание jwt-токена:

{
    "id": int,
    "username": str,

}

--------------------------------------------------------------

Ответ сервера клиенту по websocket

{
    "sender_id": int,
    "receiver_id": int,
    "content": dict = {
        "text_content": str,
    },

}

---------------------------------------------------------------

Ответ клиента серверу на успешное получение данных
"received"

---------------------------------------------------------------

Формат отправки данных клиента серверу (устарело)

{
    "token": str,
    "message": {
        "sender_id": int,
        "receiver_id": int,
        "content": {
            "text_content": str,
        }
    }
}

---------------------------------------------------------------

Формат отправки данных клиента серверу (устарело)

{
    "sender_id": int,
    "receiver_id": int,
    "content": {
        "text_content": str
    }
}

--------------------------------------------------------------

Формат отправки данных сервера клиенту (и обратная отправка) (устарело)

{
    "type":= "messages"
    "message": {
        "sender_id": int,
        "receiver_id": int,
        "content": {
            "text_content": str
        }
    }
}

----------------------------------------------------------------

Формат отправки сообщения принятия

{
    "type":= "ack"
    "time_key": int    (time.perf_counter_ns())
}

----------------------------------------------------------------

Формат отправки сообщений от сервера к клиенту (и от клиента на сервер)

{
    "type":= "messages"
    "time_key": int      (time.perf_counter_ns())
    "messages": [
        {
            "id": int,          # только сервер->клиент
            "sender_id": int,
            "chat_id": int,
            "content_text": str
        },
    ]
}

----------------------------------------------------------------

Хранение сообщений в redis

LIST (индексы-ключи)

user:{user_id} [
    {
        "sender_id": int,
        "chat_id": int,
        "content_text": str
    },
]

-----------------------------------------------------------------

Хранение чатов с индексами их пользователей

LIST

chat:{chat_id} [user_id: int]



! план:

пофиксить баг с многочисленной отправкой одних данных (возможно сервер отправляет пустые списки новых сообщений)
протестить работу с бд
итоговый билд сервиса
настроить взаимодействие с другими сервисами